{"ast":null,"code":"var _jsxFileName = \"D:\\\\git-delete\\\\Personalized-Investment-Recommendation-App\\\\Personalized-Investment-Recommendation-App-main\\\\frontend\\\\src\\\\pages\\\\Investment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport NavBar from \"../components/NavBar\";\nimport debounce from \"lodash.debounce\";\nimport { Box, Card, Typography, Button, TextField, Select, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Alert, CircularProgress, Autocomplete } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport SellIcon from '@mui/icons-material/Sell';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatDate(date) {\n  if (!date) return \"-\";\n  try {\n    const d = typeof date === 'string' ? new Date(date.replace(/Z?$/, 'Z')) : new Date(date);\n    if (isNaN(d.getTime())) return \"-\";\n    return d.toLocaleDateString();\n  } catch {\n    return \"-\";\n  }\n}\nfunction getPeriodReturns(annualRate) {\n  const r = annualRate / 100;\n  return {\n    monthly: ((Math.pow(1 + r, 1 / 12) - 1) * 100).toFixed(2),\n    quarterly: ((Math.pow(1 + r, 1 / 4) - 1) * 100).toFixed(2),\n    halfYearly: ((Math.pow(1 + r, 1 / 2) - 1) * 100).toFixed(2),\n    yearly: (r * 100).toFixed(2)\n  };\n}\nfunction Investment() {\n  _s();\n  const [type, setType] = useState(\"Stock\");\n  const [amount, setAmount] = useState(\"\");\n  const [expectedReturn, setExpectedReturn] = useState(\"\");\n  const [investments, setInvestments] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchError, setSearchError] = useState(\"\");\n  const [stockQuery, setStockQuery] = useState(\"\");\n  const [stockSuggestions, setStockSuggestions] = useState([]);\n  const [showStockSuggestions, setShowStockSuggestions] = useState(false);\n  const [mfQuery, setMfQuery] = useState(\"\");\n  const [mfSuggestions, setMfSuggestions] = useState([]);\n  const [showMfSuggestions, setShowMfSuggestions] = useState(false);\n  const [virtualBalance, setVirtualBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchInvestments = async () => {\n    const res = await axios.get(\"/api/investments\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    setInvestments(res.data);\n  };\n  const fetchOptions = async t => {\n    const res = await axios.get(`/api/investment-options?type=${t}`);\n    setOptions(res.data);\n    setSelectedCompany(\"\");\n    setExpectedReturn(\"\");\n  };\n\n  // Debounced stock search\n  const fetchStockSuggestions = debounce(async query => {\n    try {\n      const res = await axios.get(`/api/stocks/search?query=${encodeURIComponent(query || '')}`);\n      setStockSuggestions(res.data);\n    } catch {\n      setStockSuggestions([]);\n    }\n  }, 400);\n\n  // Debounced mutual fund search\n  const fetchMfSuggestions = debounce(async query => {\n    try {\n      const res = await axios.get(`/api/mutualfunds/search?query=${encodeURIComponent(query || '')}`);\n      setMfSuggestions(res.data);\n    } catch {\n      setMfSuggestions([]);\n    }\n  }, 400);\n  useEffect(() => {\n    fetchInvestments();\n    fetchOptions(type);\n    // Fetch user profile for virtual balance\n    const fetchProfile = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const headers = {\n          Authorization: `Bearer ${token}`\n        };\n        const res = await axios.get(\"/api/profile\", {\n          headers\n        });\n        setVirtualBalance(res.data.virtual_balance);\n      } catch {\n        setVirtualBalance(null);\n      }\n    };\n    fetchProfile();\n  }, []);\n  useEffect(() => {\n    fetchOptions(type);\n  }, [type]);\n  useEffect(() => {\n    if (type === \"Stock\") {\n      fetchStockSuggestions(stockQuery);\n    }\n  }, [stockQuery, type]);\n  useEffect(() => {\n    if (type === \"Mutual Fund\") {\n      fetchMfSuggestions(mfQuery);\n    }\n  }, [mfQuery, type]);\n  const handleAdd = async e => {\n    e.preventDefault();\n    setMsg(\"\");\n    if (!type || !selectedCompany || !amount || !expectedReturn) {\n      setMsg(\"All fields are required.\");\n      return;\n    }\n    let cleanReturn = expectedReturn;\n    if (typeof cleanReturn === \"string\") {\n      cleanReturn = cleanReturn.replace(\"%\", \"\").trim();\n    }\n    const amt = Number(amount);\n    if (isNaN(amt) || amt <= 0) {\n      setMsg(\"Amount must be a positive number.\");\n      return;\n    }\n    if (virtualBalance !== null && amt > virtualBalance) {\n      setMsg(\"Insufficient funds: amount exceeds your virtual balance.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      await axios.post(\"/api/investments\", {\n        type,\n        company: selectedCompany,\n        amount: amt,\n        expected_return: Number(cleanReturn)\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setMsg(\"Investment added\");\n      setAmount(\"\");\n      setExpectedReturn(\"\");\n      setSelectedCompany(\"\");\n      fetchInvestments();\n      // Update balance after investment\n      const token = localStorage.getItem(\"token\");\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      const res = await axios.get(\"/api/profile\", {\n        headers\n      });\n      setVirtualBalance(res.data.virtual_balance);\n    } catch {\n      setMsg(\"Failed to add investment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSell = async id => {\n    setLoading(true);\n    try {\n      await axios.post(`/api/investments/${id}/sell`, {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setMsg(\"Investment sold\");\n      fetchInvestments();\n    } catch {\n      setMsg(\"Failed to sell investment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0,\n      rotateY: 90\n    },\n    animate: {\n      opacity: 1,\n      rotateY: 0\n    },\n    exit: {\n      opacity: 0,\n      rotateY: 90\n    },\n    transition: {\n      duration: 0.6,\n      ease: \"anticipate\"\n    },\n    style: {\n      perspective: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'background.default',\n        minHeight: '100vh',\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          maxWidth: 1000,\n          mx: 'auto',\n          px: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 40\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.7,\n            type: \"spring\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 8,\n            sx: {\n              borderRadius: 4,\n              p: 4,\n              mb: 4,\n              background: 'linear-gradient(120deg, #232526 0%, #414345 100%)',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              fontWeight: 700,\n              sx: {\n                mb: 2,\n                background: 'linear-gradient(90deg, #00c6ff 0%, #0072ff 100%)',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent'\n              },\n              children: \"Virtual Investments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              sx: {\n                mb: 2,\n                color: 'rgba(255,255,255,0.8)'\n              },\n              children: [\"Virtual Balance: \\u20B9\", virtualBalance !== null ? virtualBalance : '...']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              onSubmit: handleAdd,\n              autoComplete: \"off\",\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2,\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Select, {\n                value: type,\n                onChange: e => setType(e.target.value),\n                variant: \"filled\",\n                sx: {\n                  minWidth: 140,\n                  bgcolor: 'rgba(255,255,255,0.05)',\n                  color: 'white'\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Stock\",\n                  children: \"Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Mutual Fund\",\n                  children: \"Mutual Fund\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), type === \"Stock\" ? /*#__PURE__*/_jsxDEV(Autocomplete, {\n                freeSolo: true,\n                options: stockSuggestions.map(s => s.name),\n                inputValue: stockQuery,\n                onInputChange: (_, newInputValue) => setStockQuery(newInputValue),\n                onChange: (_, newValue) => {\n                  setSelectedCompany(newValue || \"\");\n                  const found = stockSuggestions.find(s => s.name === newValue);\n                  if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  ...params,\n                  label: \"Search Stock\",\n                  variant: \"filled\",\n                  sx: {\n                    bgcolor: 'rgba(255,255,255,0.05)',\n                    minWidth: 200,\n                    input: {\n                      color: 'white'\n                    },\n                    label: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Autocomplete, {\n                freeSolo: true,\n                options: mfSuggestions.map(f => f.name),\n                inputValue: mfQuery,\n                onInputChange: (_, newInputValue) => setMfQuery(newInputValue),\n                onChange: (_, newValue) => {\n                  setSelectedCompany(newValue || \"\");\n                  const found = mfSuggestions.find(f => f.name === newValue);\n                  if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  ...params,\n                  label: \"Search Mutual Fund\",\n                  variant: \"filled\",\n                  sx: {\n                    bgcolor: 'rgba(255,255,255,0.05)',\n                    minWidth: 200,\n                    input: {\n                      color: 'white'\n                    },\n                    label: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"number\",\n                label: \"Amount\",\n                value: amount,\n                onChange: e => setAmount(e.target.value),\n                variant: \"filled\",\n                sx: {\n                  minWidth: 120,\n                  bgcolor: 'rgba(255,255,255,0.05)',\n                  input: {\n                    color: 'white'\n                  },\n                  label: {\n                    color: 'rgba(255,255,255,0.7)'\n                  }\n                },\n                InputLabelProps: {\n                  style: {\n                    color: 'rgba(255,255,255,0.7)'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), selectedCompany && expectedReturn && !isNaN(Number(expectedReturn)) && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: 'row',\n                  gap: 3,\n                  alignItems: 'center',\n                  bgcolor: 'rgba(255,255,255,0.07)',\n                  borderRadius: 2,\n                  px: 2,\n                  py: 1,\n                  mb: 1\n                },\n                children: (() => {\n                  const returns = getPeriodReturns(Number(expectedReturn));\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        color: 'white'\n                      },\n                      children: [\"Monthly: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: [returns.monthly, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 88\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        color: 'white'\n                      },\n                      children: [\"Quarterly: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: [returns.quarterly, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 90\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        color: 'white'\n                      },\n                      children: [\"Half-Yearly: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: [returns.halfYearly, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 92\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        color: 'white'\n                      },\n                      children: [\"Yearly: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: [returns.yearly, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 264,\n                        columnNumber: 87\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true);\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 30\n                }, this),\n                sx: {\n                  borderRadius: 2,\n                  fontWeight: 700,\n                  boxShadow: 3,\n                  minWidth: 180\n                },\n                disabled: loading,\n                children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 22,\n                  color: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 30\n                }, this) : \"Add Investment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), msg && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: msg.includes('fail') ? 'error' : msg.includes('added') ? 'success' : 'info',\n              sx: {\n                mb: 2\n              },\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 40\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.8,\n            type: \"spring\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 6,\n            sx: {\n              borderRadius: 3,\n              p: 3,\n              background: 'linear-gradient(120deg, #232526 0%, #414345 100%)',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              fontWeight: 700,\n              sx: {\n                mb: 2,\n                color: 'white'\n              },\n              children: \"Current Investments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              sx: {\n                background: 'rgba(255,255,255,0.03)',\n                borderRadius: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Company\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Monthly Return %\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Quarterly Return %\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Half-Yearly Return %\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Yearly Return %\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Date Invested\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: investments.map(inv => {\n                    const returns = getPeriodReturns(inv.expected_return);\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: inv.type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 313,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: inv.company || \"-\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: inv.amount\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: [returns.monthly, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: [returns.quarterly, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: [returns.halfYearly, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 318,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: [returns.yearly, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: formatDate(inv.date_invested)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 320,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => handleSell(inv._id),\n                          variant: \"contained\",\n                          color: \"secondary\",\n                          startIcon: /*#__PURE__*/_jsxDEV(SellIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 326,\n                            columnNumber: 42\n                          }, this),\n                          sx: {\n                            borderRadius: 2,\n                            fontWeight: 700\n                          },\n                          disabled: loading,\n                          children: \"Sell\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 322,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 321,\n                        columnNumber: 27\n                      }, this)]\n                    }, inv._id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n_s(Investment, \"b0UKfl20BU2X+m5cRVKci1Jk4Yg=\");\n_c = Investment;\nexport default Investment;\nvar _c;\n$RefreshReg$(_c, \"Investment\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","NavBar","debounce","Box","Card","Typography","Button","TextField","Select","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Alert","CircularProgress","Autocomplete","motion","AddCircleOutlineIcon","SellIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDate","date","d","Date","replace","isNaN","getTime","toLocaleDateString","getPeriodReturns","annualRate","r","monthly","Math","pow","toFixed","quarterly","halfYearly","yearly","Investment","_s","type","setType","amount","setAmount","expectedReturn","setExpectedReturn","investments","setInvestments","msg","setMsg","options","setOptions","selectedCompany","setSelectedCompany","search","setSearch","suggestions","setSuggestions","showSuggestions","setShowSuggestions","searchError","setSearchError","stockQuery","setStockQuery","stockSuggestions","setStockSuggestions","showStockSuggestions","setShowStockSuggestions","mfQuery","setMfQuery","mfSuggestions","setMfSuggestions","showMfSuggestions","setShowMfSuggestions","virtualBalance","setVirtualBalance","loading","setLoading","fetchInvestments","res","get","headers","Authorization","localStorage","getItem","data","fetchOptions","t","fetchStockSuggestions","query","encodeURIComponent","fetchMfSuggestions","fetchProfile","token","virtual_balance","handleAdd","e","preventDefault","cleanReturn","trim","amt","Number","post","company","expected_return","handleSell","id","div","initial","opacity","rotateY","animate","exit","transition","duration","ease","style","perspective","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","bgcolor","minHeight","py","maxWidth","mx","px","y","elevation","borderRadius","p","mb","background","color","variant","fontWeight","WebkitBackgroundClip","WebkitTextFillColor","component","onSubmit","autoComplete","display","flexWrap","gap","alignItems","value","onChange","target","minWidth","freeSolo","map","s","name","inputValue","onInputChange","_","newInputValue","newValue","found","find","undefined","String","renderInput","params","label","input","InputLabelProps","f","flexDirection","returns","startIcon","boxShadow","disabled","size","severity","includes","inv","hover","date_invested","onClick","_id","_c","$RefreshReg$"],"sources":["D:/git-delete/Personalized-Investment-Recommendation-App/Personalized-Investment-Recommendation-App-main/frontend/src/pages/Investment.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { Box, Card, Typography, Button, TextField, Select, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Alert, CircularProgress, Autocomplete } from \"@mui/material\";\r\nimport { motion } from \"framer-motion\";\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport SellIcon from '@mui/icons-material/Sell';\r\n\r\nfunction formatDate(date) {\r\n  if (!date) return \"-\";\r\n  try {\r\n    const d = typeof date === 'string' ? new Date(date.replace(/Z?$/, 'Z')) : new Date(date);\r\n    if (isNaN(d.getTime())) return \"-\";\r\n    return d.toLocaleDateString();\r\n  } catch {\r\n    return \"-\";\r\n  }\r\n}\r\n\r\nfunction getPeriodReturns(annualRate) {\r\n  const r = annualRate / 100;\r\n  return {\r\n    monthly: ((Math.pow(1 + r, 1/12) - 1) * 100).toFixed(2),\r\n    quarterly: ((Math.pow(1 + r, 1/4) - 1) * 100).toFixed(2),\r\n    halfYearly: ((Math.pow(1 + r, 1/2) - 1) * 100).toFixed(2),\r\n    yearly: (r * 100).toFixed(2)\r\n  };\r\n}\r\n\r\nfunction Investment() {\r\n  const [type, setType] = useState(\"Stock\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [expectedReturn, setExpectedReturn] = useState(\"\");\r\n  const [investments, setInvestments] = useState([]);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [searchError, setSearchError] = useState(\"\");\r\n  const [stockQuery, setStockQuery] = useState(\"\");\r\n  const [stockSuggestions, setStockSuggestions] = useState([]);\r\n  const [showStockSuggestions, setShowStockSuggestions] = useState(false);\r\n  const [mfQuery, setMfQuery] = useState(\"\");\r\n  const [mfSuggestions, setMfSuggestions] = useState([]);\r\n  const [showMfSuggestions, setShowMfSuggestions] = useState(false);\r\n  const [virtualBalance, setVirtualBalance] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchInvestments = async () => {\r\n    const res = await axios.get(\"/api/investments\", {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n    });\r\n    setInvestments(res.data);\r\n  };\r\n\r\n  const fetchOptions = async (t) => {\r\n    const res = await axios.get(`/api/investment-options?type=${t}`);\r\n    setOptions(res.data);\r\n    setSelectedCompany(\"\");\r\n    setExpectedReturn(\"\");\r\n  };\r\n\r\n  // Debounced stock search\r\n  const fetchStockSuggestions = debounce(async (query) => {\r\n    try {\r\n      const res = await axios.get(`/api/stocks/search?query=${encodeURIComponent(query || '')}`);\r\n      setStockSuggestions(res.data);\r\n    } catch {\r\n      setStockSuggestions([]);\r\n    }\r\n  }, 400);\r\n\r\n  // Debounced mutual fund search\r\n  const fetchMfSuggestions = debounce(async (query) => {\r\n    try {\r\n      const res = await axios.get(`/api/mutualfunds/search?query=${encodeURIComponent(query || '')}`);\r\n      setMfSuggestions(res.data);\r\n    } catch {\r\n      setMfSuggestions([]);\r\n    }\r\n  }, 400);\r\n\r\n  useEffect(() => {\r\n    fetchInvestments();\r\n    fetchOptions(type);\r\n    // Fetch user profile for virtual balance\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const headers = { Authorization: `Bearer ${token}` };\r\n        const res = await axios.get(\"/api/profile\", { headers });\r\n        setVirtualBalance(res.data.virtual_balance);\r\n      } catch {\r\n        setVirtualBalance(null);\r\n      }\r\n    };\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchOptions(type);\r\n  }, [type]);\r\n\r\n  useEffect(() => {\r\n    if (type === \"Stock\") {\r\n      fetchStockSuggestions(stockQuery);\r\n    }\r\n  }, [stockQuery, type]);\r\n\r\n  useEffect(() => {\r\n    if (type === \"Mutual Fund\") {\r\n      fetchMfSuggestions(mfQuery);\r\n    }\r\n  }, [mfQuery, type]);\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault();\r\n    setMsg(\"\");\r\n    if (!type || !selectedCompany || !amount || !expectedReturn) {\r\n      setMsg(\"All fields are required.\");\r\n      return;\r\n    }\r\n    let cleanReturn = expectedReturn;\r\n    if (typeof cleanReturn === \"string\") {\r\n      cleanReturn = cleanReturn.replace(\"%\", \"\").trim();\r\n    }\r\n    const amt = Number(amount);\r\n    if (isNaN(amt) || amt <= 0) {\r\n      setMsg(\"Amount must be a positive number.\");\r\n      return;\r\n    }\r\n    if (virtualBalance !== null && amt > virtualBalance) {\r\n      setMsg(\"Insufficient funds: amount exceeds your virtual balance.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(\"/api/investments\", {\r\n        type,\r\n        company: selectedCompany,\r\n        amount: amt,\r\n        expected_return: Number(cleanReturn)\r\n      }, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n      });\r\n      setMsg(\"Investment added\");\r\n      setAmount(\"\");\r\n      setExpectedReturn(\"\");\r\n      setSelectedCompany(\"\");\r\n      fetchInvestments();\r\n      // Update balance after investment\r\n      const token = localStorage.getItem(\"token\");\r\n      const headers = { Authorization: `Bearer ${token}` };\r\n      const res = await axios.get(\"/api/profile\", { headers });\r\n      setVirtualBalance(res.data.virtual_balance);\r\n    } catch {\r\n      setMsg(\"Failed to add investment\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSell = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(`/api/investments/${id}/sell`, {}, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n      });\r\n      setMsg(\"Investment sold\");\r\n      fetchInvestments();\r\n    } catch {\r\n      setMsg(\"Failed to sell investment\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, rotateY: 90 }}\r\n      animate={{ opacity: 1, rotateY: 0 }}\r\n      exit={{ opacity: 0, rotateY: 90 }}\r\n      transition={{ duration: 0.6, ease: \"anticipate\" }}\r\n      style={{ perspective: 1000 }}\r\n    >\r\n      <NavBar />\r\n      <Box sx={{ bgcolor: 'background.default', minHeight: '100vh', py: 4 }}>\r\n        <Box sx={{ maxWidth: 1000, mx: 'auto', px: 2 }}>\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 40 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.7, type: \"spring\" }}\r\n          >\r\n            <Card elevation={8} sx={{ borderRadius: 4, p: 4, mb: 4, background: 'linear-gradient(120deg, #232526 0%, #414345 100%)', color: 'white' }}>\r\n              <Typography variant=\"h4\" fontWeight={700} sx={{ mb: 2, background: 'linear-gradient(90deg, #00c6ff 0%, #0072ff 100%)', WebkitBackgroundClip: 'text', WebkitTextFillColor: 'transparent' }}>\r\n                Virtual Investments\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" sx={{ mb: 2, color: 'rgba(255,255,255,0.8)' }}>\r\n                Virtual Balance: ₹{virtualBalance !== null ? virtualBalance : '...'}\r\n              </Typography>\r\n              <Box component=\"form\" onSubmit={handleAdd} autoComplete=\"off\" sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, alignItems: 'center', mb: 2 }}>\r\n                <Select\r\n                  value={type}\r\n                  onChange={e => setType(e.target.value)}\r\n                  variant=\"filled\"\r\n                  sx={{ minWidth: 140, bgcolor: 'rgba(255,255,255,0.05)', color: 'white' }}\r\n                >\r\n                  <MenuItem value=\"Stock\">Stock</MenuItem>\r\n                  <MenuItem value=\"Mutual Fund\">Mutual Fund</MenuItem>\r\n                </Select>\r\n                {type === \"Stock\" ? (\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    options={stockSuggestions.map(s => s.name)}\r\n                    inputValue={stockQuery}\r\n                    onInputChange={(_, newInputValue) => setStockQuery(newInputValue)}\r\n                    onChange={(_, newValue) => {\r\n                      setSelectedCompany(newValue || \"\");\r\n                      const found = stockSuggestions.find(s => s.name === newValue);\r\n                      if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\r\n                    }}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} label=\"Search Stock\" variant=\"filled\" sx={{ bgcolor: 'rgba(255,255,255,0.05)', minWidth: 200, input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }} InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }} />\r\n                    )}\r\n                  />\r\n                ) : (\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    options={mfSuggestions.map(f => f.name)}\r\n                    inputValue={mfQuery}\r\n                    onInputChange={(_, newInputValue) => setMfQuery(newInputValue)}\r\n                    onChange={(_, newValue) => {\r\n                      setSelectedCompany(newValue || \"\");\r\n                      const found = mfSuggestions.find(f => f.name === newValue);\r\n                      if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\r\n                    }}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} label=\"Search Mutual Fund\" variant=\"filled\" sx={{ bgcolor: 'rgba(255,255,255,0.05)', minWidth: 200, input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }} InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }} />\r\n                    )}\r\n                  />\r\n                )}\r\n                <TextField\r\n                  type=\"number\"\r\n                  label=\"Amount\"\r\n                  value={amount}\r\n                  onChange={e => setAmount(e.target.value)}\r\n                  variant=\"filled\"\r\n                  sx={{ minWidth: 120, bgcolor: 'rgba(255,255,255,0.05)', input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }}\r\n                  InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }}\r\n                />\r\n                {/* Show expected returns breakdown if a company is selected and expectedReturn is available */}\r\n                {selectedCompany && expectedReturn && !isNaN(Number(expectedReturn)) && (\r\n                  <Box sx={{ display: 'flex', flexDirection: 'row', gap: 3, alignItems: 'center', bgcolor: 'rgba(255,255,255,0.07)', borderRadius: 2, px: 2, py: 1, mb: 1 }}>\r\n                    {(() => {\r\n                      const returns = getPeriodReturns(Number(expectedReturn));\r\n                      return (\r\n                        <>\r\n                          <Typography variant=\"body2\" sx={{ color: 'white' }}>Monthly: <b>{returns.monthly}%</b></Typography>\r\n                          <Typography variant=\"body2\" sx={{ color: 'white' }}>Quarterly: <b>{returns.quarterly}%</b></Typography>\r\n                          <Typography variant=\"body2\" sx={{ color: 'white' }}>Half-Yearly: <b>{returns.halfYearly}%</b></Typography>\r\n                          <Typography variant=\"body2\" sx={{ color: 'white' }}>Yearly: <b>{returns.yearly}%</b></Typography>\r\n                        </>\r\n                      );\r\n                    })()}\r\n                  </Box>\r\n                )}\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<AddCircleOutlineIcon />}\r\n                  sx={{ borderRadius: 2, fontWeight: 700, boxShadow: 3, minWidth: 180 }}\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? <CircularProgress size={22} color=\"inherit\" /> : \"Add Investment\"}\r\n                </Button>\r\n              </Box>\r\n              {msg && <Alert severity={msg.includes('fail') ? 'error' : msg.includes('added') ? 'success' : 'info'} sx={{ mb: 2 }}>{msg}</Alert>}\r\n            </Card>\r\n          </motion.div>\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 40 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.8, type: \"spring\" }}\r\n          >\r\n            <Card elevation={6} sx={{ borderRadius: 3, p: 3, background: 'linear-gradient(120deg, #232526 0%, #414345 100%)', color: 'white' }}>\r\n              <Typography variant=\"h5\" fontWeight={700} sx={{ mb: 2, color: 'white' }}>\r\n                Current Investments\r\n              </Typography>\r\n              <TableContainer component={Paper} sx={{ background: 'rgba(255,255,255,0.03)', borderRadius: 3 }}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Type</TableCell>\r\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Company</TableCell>\r\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Amount</TableCell>\r\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Monthly Return %</TableCell>\r\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Quarterly Return %</TableCell>\r\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Half-Yearly Return %</TableCell>\r\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Yearly Return %</TableCell>\r\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Date Invested</TableCell>\r\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Action</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {investments.map(inv => {\r\n                      const returns = getPeriodReturns(inv.expected_return);\r\n                      return (\r\n                        <TableRow key={inv._id} hover>\r\n                          <TableCell sx={{ color: 'white' }}>{inv.type}</TableCell>\r\n                          <TableCell sx={{ color: 'white' }}>{inv.company || \"-\"}</TableCell>\r\n                          <TableCell sx={{ color: 'white' }}>{inv.amount}</TableCell>\r\n                          <TableCell sx={{ color: 'white' }}>{returns.monthly}%</TableCell>\r\n                          <TableCell sx={{ color: 'white' }}>{returns.quarterly}%</TableCell>\r\n                          <TableCell sx={{ color: 'white' }}>{returns.halfYearly}%</TableCell>\r\n                          <TableCell sx={{ color: 'white' }}>{returns.yearly}%</TableCell>\r\n                          <TableCell sx={{ color: 'white' }}>{formatDate(inv.date_invested)}</TableCell>\r\n                          <TableCell>\r\n                            <Button\r\n                              onClick={() => handleSell(inv._id)}\r\n                              variant=\"contained\"\r\n                              color=\"secondary\"\r\n                              startIcon={<SellIcon />}\r\n                              sx={{ borderRadius: 2, fontWeight: 700 }}\r\n                              disabled={loading}\r\n                            >\r\n                              Sell\r\n                            </Button>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </motion.div>\r\n        </Box>\r\n      </Box>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default Investment; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}